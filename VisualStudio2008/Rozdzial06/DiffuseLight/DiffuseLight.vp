// Prosty shader oœwietlenia rozproszonego
// Shader wierzcho³ków
// Richard S. Wright Jr.
// OpenGL. Ksiêga eksperta
#version 130

// Dane przychodz¹ce wierzcho³ków... po³o¿enie i normalna
in vec4 vVertex;
in vec3 vNormal;

// Ustawienia dla ka¿dej porcji danych
uniform vec4	diffuseColor;	
uniform vec3	vLightPosition;
uniform mat4	mvpMatrix;
uniform mat4	mvMatrix;
uniform mat3	normalMatrix;

// Kolor do shadera fragmentów
smooth out vec4 vVaryingColor;

void main(void) 
    { 
    // Obliczenie normalnej do powierzchni we wspó³rzêdnych oka
    vec3 vEyeNormal = normalMatrix * vNormal;

    // Obliczenie po³o¿enia wierzcho³ka we wspó³rzêdnych oka
    vec4 vPosition4 = mvMatrix * vVertex;
    vec3 vPosition3 = vPosition4.xyz / vPosition4.w;

    // Wektor do Ÿród³a œwiat³a
    vec3 vLightDir = normalize(vLightPosition - vPosition3);

    // Iloczyn skalarny daje intensywnoœæ rozproszenia
    float diff = max(0.0, dot(vEyeNormal, vLightDir));

    // Mno¿enie intensywnoœci przez kolor rozproszenia
    vVaryingColor.rgb = diff * diffuseColor.rgb;
    vVaryingColor.a = diffuseColor.a;

    // Przekszta³cenie geometrii
    gl_Position = mvpMatrix * vVertex;
    }