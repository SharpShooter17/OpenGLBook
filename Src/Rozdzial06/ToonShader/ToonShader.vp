// Shader oœwietlenia komórki
// Shader wierzcho³ków
// Richard S. Wright Jr.
// OpenGL. Ksiêga eksperta
#version 130

// Dane wejœciowe wierzcho³ków...po³o¿enie i normalna
in vec4 vVertex;
in vec3 vNormal;

smooth out float textureCoordinate;

uniform vec3	vLightPosition;
uniform mat4	mvpMatrix;
uniform mat4	mvMatrix;
uniform mat3	normalMatrix;


void main(void) 
    { 
    // Obliczenie normalnej do powierzchni we wspó³rzêdnych oka
    vec3 vEyeNormal = normalMatrix * vNormal;

    // Obliczenie po³o¿enia wierzcho³ka w we wspó³rzêdnych oka
    vec4 vPosition4 = mvMatrix * vVertex;
    vec3 vPosition3 = vPosition4.xyz / vPosition4.w;

    // Obliczenie wektora do Ÿród³a œwiat³a
    vec3 vLightDir = normalize(vLightPosition - vPosition3);

    // Iloczyn skalarny da nam intensywnoœæ rozproszenia
    textureCoordinate = max(0.0, dot(vEyeNormal, vLightDir));

    // Przekszta³cenie geometrii
    gl_Position = mvpMatrix * vVertex;
    }